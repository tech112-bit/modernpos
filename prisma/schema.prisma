generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model categories {
  id          String     @id
  name        String     @unique
  description String?
  user_id     String
  created_at  DateTime   @default(now())
  updated_at  DateTime
  products    products[]
  users       users      @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customers {
  id         String   @id
  name       String
  email      String?
  phone      String   @unique
  address    String?
  city       String?
  state      String?
  zip_code   String?
  user_id    String
  created_at DateTime @default(now())
  updated_at DateTime
  sales      sales[]
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model products {
  id          String       @id
  name        String
  description String?
  sku         String       @unique
  barcode     String?
  price       Decimal      @db.Decimal(10, 2)
  cost        Decimal      @db.Decimal(10, 2)
  stock       Int          @default(0)
  category_id String
  user_id     String
  created_at  DateTime     @default(now())
  updated_at  DateTime
  categories  categories   @relation(fields: [category_id], references: [id], onDelete: Cascade)
  sale_items  sale_items[]
  users       users        @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sale_items {
  id         String   @id
  quantity   Int
  price      Decimal  @db.Decimal(10, 2)
  sale_id    String
  product_id String
  user_id    String
  created_at DateTime @default(now())
  products   products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  sales      sales    @relation(fields: [sale_id], references: [id], onDelete: Cascade)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sales {
  id           String       @id
  total        Decimal      @db.Decimal(10, 2)
  payment_type PaymentType  @default(CASH)
  discount     Decimal      @default(0) @db.Decimal(10, 2)
  customer_id  String?
  user_id      String
  created_at   DateTime     @default(now())
  updated_at   DateTime
  sale_items   sale_items[]
  customers    customers?   @relation(fields: [customer_id], references: [id])
  users        users        @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id            String         @id
  email         String         @unique
  password      String
  role          UserRole       @default(USER)
  name          String?
  created_at    DateTime       @default(now())
  updated_at    DateTime
  last_login_at DateTime?
  status        UserStatus     @default(ACTIVE)
  sales         sales[]
  categories    categories[]
  customers     customers[]
  products      products[]
  sale_items    sale_items[]
}

enum PaymentType {
  CASH
  CARD
  MOBILE_PAY
}

enum UserRole {
  ADMIN
  USER
  MANAGER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}
